jobs: # A basic unit of work in a run
  setup:
    # directory where steps are run
    working_directory: ~/erk/pyerk-django
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.8
        # environment: # environment variables for primary container
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - restore_cache:
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps2--{{ checksum "requirements.txt" }}--
      - run:
          name: Install Dependancies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -U pip
            pip install -r requirements.txt
      - run:
          name: Install pyerk
          command: |
            . venv/bin/activate
            echo Cloning pyerk
            cd ../
            git clone https://github.com/ackrep-org/pyerk-core.git
            cd pyerk-core
            git checkout develop
            pip install -r requirements.txt
            pip install -e .
      - run:
          name: install graphviz
          command: |
            sudo apt-get install graphviz
      - save_cache: # cache Python dependencies using checksum of requirements as the cache-key
          key: deps2--{{ checksum "requirements.txt" }}--
          paths:
            - "venv"
      - run:
          name: Load ERK Modules
          command: |
            echo Cloning erk-data
            cd ../
            mkdir erk-data
            cd erk-data
            git clone https://github.com/ackrep-org/erk-data-control-theory.git
            mv erk-data-control-theory control-theory
            cd control-theory
            git checkout develop
      - run:
          name: Load Test Data
          command: |
            cd ../../
            mkdir ackrep
            cd ackrep
            git clone https://github.com/ackrep-org/ackrep_data.git
            mv ackrep_data ackrep_data_for_unittests
            cd ackrep_data_for_unittests
            git checkout for_unittests
      - run:
          name: Test Web
          command: |
            . venv/bin/activate
            python manage.py test

workflows:
  version: 2
  build_and_test:
    jobs:
      - setup

